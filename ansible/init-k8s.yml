- name: install a single node kubernetes instance
  hosts: all
  become: yes
  vars:
    - os: "CentOS_8"
    - k8s_minor_version: "1.19"
    - k8s_revision_version: "1.19.4"
    - k8s_pod_subnet: "10.100.0.0/16"

  tasks:
    - name: modprobe br_netfilter (1/2)
      command: modprobe br_netfilter

    - name: modprobe br_netfilter (2/2)
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: br_netfilter
      
    - name: configure sysctl
      ansible.posix.sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_set: yes
        reload: yes
      loop:
        - name: net.bridge.bridge-nf-call-ip6tables
          value: 1
        - name: net.bridge.bridge-nf-call-iptables
          value: 1
        - name: net.ipv4.ip_forward
          value: 1

    - name: disable swap (1/2)
      command: swapoff -a

    - name: disable swap (2/2)
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: configure firewalld (1/2)
      ansible.posix.firewalld:
        port: "{{ item }}"
        immediate: yes
        permanent: yes
        zone: public
        state: enabled
      loop:
        - 6443/tcp
        - 2379-2380/tcp
        - 10250-10252/tcp
        - 30000-32767/tcp
        - 80/tcp
        - 443/tcp
        - 8443/tcp

    - name: configure firewalld (2/2)
      ansible.posix.firewalld:
        masquerade: yes
        immediate: yes
        permanent: yes
        zone: public
        state: enabled

    - name: install cri-o repo
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ k8s_minor_version }}/{{ os }}/devel:kubic:libcontainers:stable:cri-o:{{ k8s_minor_version }}.repo"
        dest: "/etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:{{ k8s_minor_version }}.repo"

    - name: install cri-o stable repo
      ansible.builtin.get_url:
        url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os }}/devel:kubic:libcontainers:stable.repo"
        dest: "/etc/yum.repos.d/devel:kubic:libcontainers:stable.repo"

    - name: install kubernetes repo
      ansible.builtin.yum_repository:
        name: Kubernetes
        description: Kubernetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
        enabled: yes
        gpgcheck: yes
        repo_gpgcheck: yes
        gpgkey:
          - https://packages.cloud.google.com/yum/doc/yum-key.gpg
          - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: install packages
      ansible.builtin.yum:
        name:
          - "kubelet-{{ k8s_revision_version }}"
          - "kubectl-{{ k8s_revision_version }}"
          - "kubeadm-{{ k8s_revision_version }}"
          - cri-o
        disable_excludes: Kubernetes

    - name: start services
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - crio
        - kubelet

    - name: get kubeadm config
      ansible.builtin.template:
        src: kubeadm-config.yaml.j2
        dest: /tmp/kubeadm-config.yaml

    - name: run kubeadm init
      command: kubeadm init --config=/tmp/kubeadm-config.yaml

    - name: remove k8s main taint
      shell: KUBECONFIG=/etc/kubernetes/admin.conf kubectl taint nodes --all node-role.kubernetes.io/master-
